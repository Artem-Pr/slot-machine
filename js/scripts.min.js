"use strict";

window.onload = function () {
  var balanceElem = document.querySelector('.balance');
  var winKits = {
    'BAR': 'kit1',
    '2xBAR': 'kit1',
    '3xBAR': 'kit1',
    '7': 'kit2',
    'CHERRY': 'kit2'
  };
  var winPoints = {
    'CHERRY_0': 2000,
    'CHERRY_1': 1000,
    'CHERRY_2': 4000,
    '7_0': 150,
    '7_1': 150,
    '7_2': 150,
    'kit2_0': 75,
    'kit2_1': 75,
    'kit2_2': 75,
    '3xBAR_0': 50,
    '3xBAR_1': 50,
    '3xBAR_2': 50,
    '2xBAR_0': 20,
    '2xBAR_1': 20,
    '2xBAR_2': 20,
    'BAR_0': 10,
    'BAR_1': 10,
    'BAR_2': 10,
    'kit1_0': 5,
    'kit1_1': 5,
    'kit1_2': 5
  };
  var results = [];
  var spinTime = 2; //s

  var spinDelay = 0.5; //s

  var startSpin1 = reelItem({
    reelSelector: '.reel__1',
    reelSpeed: 4,
    spinTime: spinTime,
    spinDelay: 0
  });
  var startSpin2 = reelItem({
    reelSelector: '.reel__2',
    reelSpeed: 5,
    spinTime: spinTime,
    spinDelay: spinDelay
  });
  var startSpin3 = reelItem({
    reelSelector: '.reel__3',
    reelSpeed: 6,
    spinTime: spinTime,
    spinDelay: spinDelay * 2
  });

  function highlightWinLine(score, lineNumb) {
    var line = document.querySelector('.win-line' + (lineNumb + 1));
    if (score >= 1000) line.classList.add('active-red');else line.classList.add('active-yellow');
  }

  function removeWinLine() {
    var lines = document.querySelectorAll('.win-line');

    for (var i = 0; i < lines.length; i++) {
      lines[i].classList.remove('active-red', 'active-yellow');
    }
  }

  function allowGame(balanceElem) {
    if (balanceElem.value > 0) return true;
    alert("You do not have enough points to play! Please recharge points");
    return false;
  }

  function getOneLinePoints(symbol, i) {
    if (!symbol) return 0;
    return winPoints[symbol + '_' + i];
  }

  function blinkPoints(score) {
    if (!score) return;
    var blinkElem = document.querySelector('.p' + score);
    blinkElem.classList.add('blink-points');
    setTimeout(function () {
      blinkElem.classList.remove('blink-points');
    }, 3000);
  }

  function getAllPoints(resultsArr) {
    var pointsArr = resultsArr[0];
    return pointsArr.reduce(function (accum, item, i) {
      var score = 0;

      if (item === resultsArr[1][i] && item === resultsArr[2][i]) {
        score = getOneLinePoints(item, i);
        blinkPoints(score);
      } else if (winKits[item] === winKits[resultsArr[1][i]] && winKits[item] === winKits[resultsArr[2][i]]) {
        score = getOneLinePoints(winKits[item], i);
        blinkPoints(score);
      }

      if (score !== 0) {
        highlightWinLine(score, i);
      }

      return score + accum;
    }, 0);
  }

  function showWinPoints(points) {
    var modal = document.querySelector('.win-modal');
    var modalText = modal.querySelector('.win-modal__score');
    var audio = new Audio('../sounds/slot-payoff.wav');
    audio.play();
    modalText.textContent = points;
    modal.style.display = 'block';
    setTimeout(function () {
      modal.style.display = 'none';
    }, 5000);
  }

  function increaseBalance(balanceElem, receivedPoints) {
    if (!receivedPoints) return;
    var balance = +balanceElem.value;
    var newBalance = balance + receivedPoints;
    var counter;
    if (receivedPoints < 1000) counter = 1;
    if (receivedPoints >= 1000 && receivedPoints <= 2500) counter = 4;
    if (receivedPoints > 2500) counter = 8;
    var timerId = setInterval(function () {
      for (var i = 1; i <= counter; i++) {
        if (balance === newBalance) {
          balanceElem.value = balance;
          clearInterval(timerId);
          return;
        }

        ++balance;
      }

      balanceElem.value = balance;
    }, 10);
  }

  document.querySelector('.btn-start').addEventListener('click', function (e) {
    if (!allowGame(balanceElem)) return;
    var audio = new Audio('../sounds/wheel4.wav');
    audio.play();
    var randomMode = document.querySelector('#random').checked;
    --balanceElem.value;
    e.target.disabled = true;
    results.push(startSpin1(randomMode, '.goal-row-right', '.goal-symbol-right'));
    results.push(startSpin2(randomMode, '.goal-row-middle', '.goal-symbol-middle'));
    results.push(startSpin3(randomMode, '.goal-row-left', '.goal-symbol-left'));
    removeWinLine();
    setTimeout(function () {
      audio.pause();
      var points = getAllPoints(results);
      if (points >= 1000) showWinPoints(points);
      increaseBalance(balanceElem, points);
      results = [];
      e.target.disabled = false;
    }, (spinTime + 2 * spinDelay) * 1000);
  });

  document.getElementById('balance').onkeydown = function (e) {
    return !/^[\D]$/.test(e.key);
  };
};
"use strict";

var reelItem = function () {
  return function (config) {
    var reel = document.querySelector(config.reelSelector);
    var reelWrapper = reel.querySelector('.reel__wrapper');
    var landPositions = {
      top: 20,
      center: 30,
      bottom: 40
    };
    var reelContainer = reel.querySelector('.reel__container');
    var symbols = ['3xBAR', 'BAR', '2xBAR', '7', 'CHERRY'];
    var translation = getRandomPosition();

    function createReelContainer(randomSymbolsArr) {
      var newReelContainer = document.createElement('div');
      newReelContainer.className = 'reel__container';

      for (var i = 1; i <= config.reelSpeed; i++) {
        var newReelWrapper = createReelWrapper(randomSymbolsArr);
        newReelContainer.prepend(newReelWrapper);
      }

      var containerTranslation = translation - 100 * config.reelSpeed;
      setTranslation(newReelContainer, containerTranslation);
      setTransform(newReelContainer, config.spinTime, config.spinDelay);
      return newReelContainer;
    }

    function createReelWrapper(symbolsArr) {
      var newReelWrapper = document.createElement('div');
      newReelWrapper.className = 'reel__wrapper';
      createImages(symbolsArr, newReelWrapper);
      return newReelWrapper;
    }

    function createImages(symbolsArr, wrapper) {
      symbolsArr.forEach(function (item) {
        var reelImg = document.createElement('img');
        reelImg.src = 'img/reel/' + item + '.png';
        reelImg.alt = item;
        reelImg.className = 'reel__img';
        wrapper.append(reelImg);
      });
    }

    function removeObsoleteItems() {
      if (reel.childElementCount > 1) reel.children[1].remove();
    }

    function getResults(translation) {
      var resultsArr = [null, null, null];
      var j = symbols.length - 1;
      var i = 0;
      var firstSymbolTrans = translation - j * 20;

      while (firstSymbolTrans <= 40) {
        if (firstSymbolTrans === landPositions.top) resultsArr[0] = symbols[i];
        if (firstSymbolTrans === landPositions.center) resultsArr[1] = symbols[i];
        if (firstSymbolTrans === landPositions.bottom) resultsArr[2] = symbols[i];
        if (++i > j) i = 0;
        firstSymbolTrans += 20;
      }

      return resultsArr;
    }

    function getFinishPosition(randomMode, row, symbol) {
      if (randomMode) return getRandomPosition();
      var trans = landPositions[row];
      var i = symbols.length;

      while (symbol !== symbols[--i]) {
        trans += 20;
        if (trans > 100) trans -= 100;
      }

      return trans;
    }

    function getRandomPosition() {
      return Math.ceil(Math.random() * 10) * 10;
    }

    function setTranslation(element, translation) {
      element.style.transform = 'translateY(' + translation + '%)';
    }

    function setTransform(element, spinTime, spinDelay) {
      element.style.transition = 'transform ' + (spinTime + spinDelay) + 's cubic-bezier(.3,.13,.79,1.11)';
    }

    createImages(symbols, reelWrapper);
    reelContainer.append(createReelWrapper(symbols));
    setTranslation(reelContainer, translation);
    return function (randomMode, goalRowSelector, goalSymbolSelector) {
      var goalRow = document.querySelector(goalRowSelector).value;
      var goalSymbol = document.querySelector(goalSymbolSelector).value;
      reelContainer = reel.querySelector('.reel__container');
      removeObsoleteItems();
      var newReelContainer = createReelContainer(symbols);
      reel.prepend(newReelContainer);
      setTransform(reelContainer, config.spinTime, config.spinDelay);
      translation = getFinishPosition(randomMode, goalRow, goalSymbol);
      var prevReelContainerTrans = 100 * config.reelSpeed + translation;
      setTimeout(function () {
        newReelContainer.style.transform = 'translateY(' + translation + '%)';
        reelContainer.style.transform = 'translateY(' + prevReelContainerTrans + '%)';
      });
      return getResults(translation);
    };
  };
}();